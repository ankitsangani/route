[{"D:\\routeapp\\src\\index.js":"1","D:\\routeapp\\src\\App.js":"2","D:\\routeapp\\src\\reportWebVitals.js":"3","D:\\routeapp\\src\\login.js":"4","D:\\routeapp\\src\\signUp.js":"5","D:\\routeapp\\src\\users.js":"6"},{"size":218,"mtime":1607078466520,"results":"7","hashOfConfig":"8"},{"size":555,"mtime":1607159762063,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3123,"mtime":1607163675721,"results":"11","hashOfConfig":"8"},{"size":10703,"mtime":1607164422519,"results":"12","hashOfConfig":"8"},{"size":3040,"mtime":1607162285642,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1cycq5p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"D:\\routeapp\\src\\index.js",[],["29","30"],"D:\\routeapp\\src\\App.js",[],"D:\\routeapp\\src\\reportWebVitals.js",[],["31","32"],"D:\\routeapp\\src\\login.js",["33"],"D:\\routeapp\\src\\signUp.js",["34","35","36","37","38","39"],"D:\\routeapp\\src\\users.js",["40","41","42"],"import React, {useEffect, useState} from 'react';\r\nimport { Table,Popconfirm,Button, Tag, Space ,Row,Col} from 'antd';\r\n\r\n\r\nconst Users = (props) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let list = [];\r\n        if (JSON.parse(localStorage.getItem(\"data\")) !== null) {\r\n            list = JSON.parse(localStorage.getItem(\"data\"));\r\n        }\r\n        setData(list);\r\n    }, [])\r\n    const handleDelete = (record) => {\r\n           const filterData = data.filter(index => index !== record);\r\n           localStorage.setItem('data', JSON.stringify(filterData));\r\n           setData(filterData);\r\n    }\r\n    const handleUpdate = (record) => {\r\n        props.history.push(`/editUserDetails/${record.id}`);\r\n    }\r\n    function LogOut() {\r\n        props.history.push(\"/\");\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'First Name',\r\n            key: 'firstName',\r\n            dataIndex: 'firstName',\r\n        },\r\n        {\r\n            title: 'Last Name',\r\n            key: 'lastName',\r\n            dataIndex: 'lastName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            key: 'email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Phone No',\r\n            key: 'phoneNo',\r\n            dataIndex: 'phoneNo'\r\n        },\r\n        {\r\n            title: 'Address',\r\n            key: 'address',\r\n            dataIndex: 'address'\r\n        },\r\n        {\r\n            title: 'Age',\r\n            key: 'age',\r\n            dataIndex: 'age',\r\n        },\r\n        {\r\n            title: 'Country',\r\n            key: 'country',\r\n            dataIndex: 'country',\r\n        },\r\n        {\r\n            title: 'Gender',\r\n            key: 'gender',\r\n            dataIndex: 'gender',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            render: (text, record) => (\r\n                <div>\r\n                    <Popconfirm title=\"Are you sure to Update？\"  style={{ color: 'red' }} onConfirm={()=> {handleUpdate(record)}} >\r\n                    <Button className=\"btn btn-outline-primary btn-mini\"  >Edit</Button>\r\n                    </Popconfirm>\r\n                    &nbsp;&nbsp;\r\n                    <Popconfirm title=\"Are you sure to Delete？\"  style={{ color: 'red' }} onConfirm={()=> {handleDelete(record)}} >\r\n                    <Button className=\"btn btn-outline-danger btn-mini\"  >Delete</Button>\r\n                    </Popconfirm>\r\n                </div>\r\n            )\r\n        },\r\n    ]\r\n\r\n    return(\r\n        <>\r\n            <Button size={\"large\"} className=\"buttonlogout\" onClick={LogOut} ><b>Log-Out</b></Button>\r\n            <h3>Users Details</h3>\r\n            <Row>\r\n                <Col span={4}> </Col>\r\n                <Col span={16}>\r\n                    <Table columns={columns}\r\n                           dataSource={data}\r\n                        pagination={{pageSize:5}}/>\r\n                </Col>\r\n                <Col/>\r\n            </Row>\r\n            </>\r\n    );\r\n\r\n}\r\nexport default Users;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":67,"column":24,"nodeType":"51","endLine":67,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":2,"column":66,"nodeType":"54","messageId":"55","endLine":2,"endColumn":74},{"ruleId":"52","severity":1,"message":"56","line":17,"column":12,"nodeType":"54","messageId":"55","endLine":17,"endColumn":25},{"ruleId":"52","severity":1,"message":"57","line":17,"column":27,"nodeType":"54","messageId":"55","endLine":17,"endColumn":43},{"ruleId":"58","severity":1,"message":"59","line":54,"column":8,"nodeType":"60","endLine":54,"endColumn":10,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":61,"column":9,"nodeType":"64","messageId":"65","endLine":122,"endColumn":10},{"ruleId":"66","severity":1,"message":"67","line":148,"column":60,"nodeType":"68","messageId":"69","endLine":148,"endColumn":62},{"ruleId":"52","severity":1,"message":"70","line":2,"column":35,"nodeType":"54","messageId":"55","endLine":2,"endColumn":38},{"ruleId":"52","severity":1,"message":"71","line":2,"column":40,"nodeType":"54","messageId":"55","endLine":2,"endColumn":45},{"ruleId":"52","severity":1,"message":"72","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":32},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'editableIndex' is assigned a value but never used.","'setEditableIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["75"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Tag' is defined but never used.","'Space' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [props.match.params.id]",{"range":"78","text":"79"},[1592,1594],"[props.match.params.id]"]