[{"D:\\routeapp\\src\\index.js":"1","D:\\routeapp\\src\\App.js":"2","D:\\routeapp\\src\\reportWebVitals.js":"3","D:\\routeapp\\src\\login.js":"4","D:\\routeapp\\src\\signUp.js":"5","D:\\routeapp\\src\\users.js":"6","D:\\routeapp\\src\\privateRoute.js":"7","D:\\routeapp\\src\\dashboard.js":"8","D:\\routeapp\\src\\ApiForm.js":"9"},{"size":218,"mtime":1607078466520,"results":"10","hashOfConfig":"11"},{"size":830,"mtime":1607336532378,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3250,"mtime":1607173008216,"results":"14","hashOfConfig":"11"},{"size":10848,"mtime":1607423015698,"results":"15","hashOfConfig":"11"},{"size":7061,"mtime":1607336173118,"results":"16","hashOfConfig":"11"},{"size":551,"mtime":1607170313090,"results":"17","hashOfConfig":"11"},{"size":534,"mtime":1607171276311,"results":"18","hashOfConfig":"11"},{"size":3596,"mtime":1607596670654,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1cycq5p",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\routeapp\\src\\index.js",[],["45","46"],"D:\\routeapp\\src\\App.js",["47"],"import React  from \"react\";\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport PrivateRoute from './privateRoute'\nimport Login from './login'\nimport signUp from \"./signUp\";\nimport Users from './users';\nimport DashBoard from './dashboard';\nimport ApiForm from \"./ApiForm\";\nimport Axios from \"axios\";\nfunction App() {\n  return (\n      <BrowserRouter>\n          <Switch>\n              <Route path=\"/ApiForm\" component={ApiForm}/>\n              <Route exact path=\"/\" component={Login}/>\n              <Route path=\"/signUp\" component={signUp}/>\n\n              <PrivateRoute path=\"/users\" component={Users}/>\n              <PrivateRoute path=\"/dashboard\" component={DashBoard}/>\n              <Route path=\"/editUserDetails/:id\" component={signUp}/>\n          </Switch>\n      </BrowserRouter>\n  );\n}\nexport default App;\n","D:\\routeapp\\src\\reportWebVitals.js",[],["48","49"],"D:\\routeapp\\src\\login.js",["50"],"import React,{useEffect,useState} from 'react';\r\nimport {UserOutlined, LockOutlined}  from \"@ant-design/icons\";\r\nimport 'antd/dist/antd.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {Row,Col,Card,message, Form, Input, Button} from 'antd';\r\nconst Login = (props) => {\r\n    const [data, setData] = useState([]);\r\n    const [userDetail, setUserDetail] = useState({});\r\n    const [error,setError] = useState(\"\");\r\n    useEffect(()=> {\r\n        let list = [];\r\n        if(JSON.parse(localStorage.getItem('data',))!==null){\r\n            list=JSON.parse(localStorage.getItem('data'));\r\n        }\r\n        setData(list);\r\n    },[])\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setUserDetail({...userDetail, [name]: value})\r\n    }\r\n    const LogIn =() => {\r\n        if(data.findIndex(item => item.email === userDetail.email && item.password === userDetail.password) !== -1) {\r\n            props.history.push('/dashboard');\r\n            message.success(\"Login SuccessFully...\")\r\n            localStorage.setItem('token',userDetail.email);\r\n        }\r\n        else {\r\n            setError(\"Email And Password Not matched\");\r\n        }\r\n    }\r\n    function signUp() {\r\n        props.history.push(\"/signUp\");\r\n    }\r\n\r\n    return (\r\n       <>\r\n           <Row className=\"row-class\" >\r\n               <Col span={8}></Col>\r\n\r\n               <Col span={4}>\r\n                   <Card className=\"mainCard-signUp\"  bordered={true}>\r\n                       <h2 className=\"h2login\" >Log In</h2>\r\n                       <Form\r\n                           name=\"basic\"\r\n                           initialValues={{ remember: true }}\r\n                       >\r\n                           <Form.Item>\r\n                               <Input placeholder=\"E-mail\" name=\"email\" value={userDetail.email} onChange={handleChange}  addonBefore={<UserOutlined />} />\r\n\r\n                           </Form.Item>\r\n\r\n                           <Form.Item>\r\n                               <Input.Password placeholder=\"Password\" name=\"password\" value={userDetail.password} onChange={handleChange}  addonBefore={<LockOutlined />}/>\r\n                               <span className=\"red\" > {error}</span>\r\n                           </Form.Item>\r\n                           <Form.Item>\r\n                               <Button className=\"btn-md buttonsubmitlogin\"  type=\"button\" htmlType=\"submit\" onClick={LogIn}>\r\n                                   Submit\r\n                               </Button>\r\n                           </Form.Item>\r\n                       </Form>\r\n                   </Card>\r\n               </Col>\r\n               <Col  span={4}>\r\n                   <Card className=\"card-demo\"    bordered={false}>\r\n                        <h2 className=\"demo\" >Sign up</h2>\r\n                       <p className=\"demo\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                       <a> <button className=\"buttonsubmitlogin btn\" onClick={signUp}   type=\"button\">Register Now</button></a>\r\n                   </Card>\r\n               </Col>\r\n               <Col span={8}></Col>\r\n           </Row>\r\n           </>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\routeapp\\src\\signUp.js",["51","52","53"],"import React, {useState, useEffect} from \"react\";\r\nimport {Row, Col, Card, Form, Input, Radio, InputNumber, Select,message, Button} from 'antd';\r\nimport {UserOutlined, MailOutlined, ContactsOutlined, HomeOutlined, LockOutlined} from '@ant-design/icons';\r\n\r\nconst SignUp = (props) => {\r\n    const [userDetail, setUserDetail] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phoneNo: \"\",\r\n        age: \"\",\r\n        address: \"\",\r\n        gender: \"\",\r\n        password: \"\"\r\n    });\r\n    const [data, setData] = useState([]);\r\n    const [errors,setError] = useState({});\r\n    const [items] = useState([\r\n        {\r\n            label: \"India\",\r\n            value: \"India\"\r\n        },\r\n        {\r\n            label: \"Brazil\",\r\n            value: \"Brazil\"\r\n        },\r\n        {\r\n            label: \"USA\",\r\n            value: \"USA\"\r\n        },\r\n        {\r\n            label: \"Dubai\",\r\n            value: \"Dubai\"\r\n        },\r\n        {\r\n            label: \"UK\",\r\n            value: \"UK\"\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        let list = [];\r\n        if (JSON.parse(localStorage.getItem(\"data\")) !== null) {\r\n            list = JSON.parse(localStorage.getItem(\"data\"));\r\n            if (props.match.params.id) {\r\n                const findUserDetail = list.find(user => user.id === parseInt(props.match.params.id))\r\n                if (findUserDetail) {\r\n                    setUserDetail(findUserDetail)\r\n                }\r\n            }\r\n        }\r\n        setData(list);\r\n    }, [])\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setUserDetail({...userDetail, [name]: value})\r\n    }\r\n    const validation = (name,value) => {\r\n        switch (name) {\r\n            case 'firstName':\r\n                if (!value) {\r\n                    return \"Please Enter First Name!!\";\r\n                } else {\r\n                   return  \"\";\r\n                }\r\n            case 'lastName':\r\n                if (!value) {\r\n                    return \"please Enter Last Name!!\";\r\n                }else {\r\n                    return \"\";\r\n                }\r\n            case 'email':\r\n                if(!value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n                    return \"please Enter valid email\";\r\n                }else {\r\n                    return \"\";\r\n                }\r\n            case 'phoneNo':\r\n                if (!value.match(/^[0]?[789]\\d{9}$/)) {\r\n                    return \"please Enter Valid PhoneNo\";\r\n                }\r\n                else {\r\n                    return \"\";\r\n                }\r\n            case 'age':\r\n                if(isNaN(value)||value<1||value>100) {\r\n                    return \"please enter valid age\";\r\n                }\r\n                else {\r\n                    return \"\";\r\n                }\r\n            case 'address':\r\n                if(value.length < 20) {\r\n                    return \"please enter valid address\";\r\n                }\r\n                else {\r\n                    return \"\";\r\n                }\r\n            case 'gender':\r\n                if(!value) {\r\n                    return \"please Select Gender\";\r\n                }\r\n                else {\r\n                    return \"\";\r\n                }\r\n            case 'country':\r\n                if(!value) {\r\n                    return \"please enter valid country\";\r\n                }\r\n                else {\r\n                    return \"\";\r\n                }\r\n            case 'password':\r\n                if (value.length < 8) {\r\n                    return \"Please Enter Valid Password\";\r\n                }\r\n                else {\r\n                    return \"\";\r\n                }\r\n        }\r\n    }\r\n    const submitValue = () => {\r\n        let allErrors = {};\r\n        const userData = {\r\n            firstName:userDetail.firstName,\r\n            lastName: userDetail.lastName,\r\n            email: userDetail.email,\r\n            phoneNo: userDetail.phoneNo,\r\n            age: userDetail.age,\r\n            address: userDetail.address,\r\n            gender: userDetail.gender,\r\n            country:userDetail.country,\r\n            password:userDetail.password\r\n        }\r\n        Object.keys(userData).forEach(key => {\r\n            const error = validation(key, userData[key])\r\n            if (error && error.length) {\r\n                allErrors[key] = error;\r\n            }\r\n        })\r\n        if (Object.keys(allErrors).length) {\r\n            return setError(allErrors)\r\n\r\n        } else {\r\n            if (props.match.params.id !== undefined) {\r\n                let index = data.findIndex(item => item.id == props.match.params.id);\r\n                data[index] = userDetail\r\n                setData(data)\r\n            } else {\r\n                userDetail.id = data.length + 1;\r\n                data.push(userDetail)\r\n                setData(data)\r\n                message.success(\"Registered Successfully ...\");\r\n            }\r\n            localStorage.setItem(\"data\", JSON.stringify(data));\r\n            setUserDetail({});\r\n            if(localStorage.getItem('token')){\r\n                props.history.push(\"/users\");\r\n            }\r\n            else {\r\n                props.history.push(\"/\");\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={8}/>\r\n                <Col span={8}>\r\n                    <Card className=\"cardtop\">\r\n                        <h1 className=\"h2login\">Register</h1>\r\n                        <p><b>Create your account</b></p>\r\n                        <Form>\r\n                            <Form.Item>\r\n                                <Input name=\"firstName\" value={userDetail.firstName} onChange={handleChange}\r\n                                       placeholder=\"Enter Your FirstName\" addonBefore={<UserOutlined/>}/>\r\n                                       <span className=\"validation\">{errors.firstName}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"lastName\" value={userDetail.lastName} onChange={handleChange}\r\n                                       placeholder=\"Enter Your Lastname\" addonBefore={<UserOutlined/>}/>\r\n                                <span className=\"validation\">{errors.lastName}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"email\" value={userDetail.email} onChange={handleChange}\r\n                                       placeholder=\"Enter Your Email\" addonBefore={<MailOutlined/>}/>\r\n                                <span className=\"validation\">{errors.email}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Input name=\"phoneNo\" value={userDetail.phoneNo} onChange={handleChange}\r\n                                       placeholder=\"Enter Your phoneNo\" addonBefore={<ContactsOutlined/>}/>\r\n                                <span className=\"validation\">{errors.phoneNo}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"age\">\r\n                                <InputNumber placeholder=\"age\" name=\"age\"\r\n                                             onChange={value => handleChange({target: {name: \"age\", value}})}\r\n                                             value={userDetail.age || \"\"}/>\r\n                                <span className=\"validation\">{errors.age}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label={(<HomeOutlined/>)}>\r\n                                <Input.TextArea name=\"address\" onChange={handleChange} value={userDetail.address}\r\n                                                placeholder=\"Enter Your Address\" className=\"none\"\r\n                                                addonBefore={<HomeOutlined/>}/>\r\n                                <span className=\"validation\">{errors.address}</span>\r\n                            </Form.Item>\r\n                            <label>Gender: &nbsp;&nbsp;&nbsp;&nbsp; </label>\r\n                            <Form.Item>\r\n                                <Radio.Group\r\n                                    onChange={e => handleChange({target: {name: \"gender\", value: e.target.value}})}\r\n                                    value={userDetail.gender}>\r\n                                    <Radio value=\"male\">Male</Radio>\r\n                                    <Radio value=\"female\">Female</Radio>\r\n                                    <Radio value=\"other\">Other</Radio>\r\n                                </Radio.Group>\r\n                                <span className=\"validation\">{errors.gender}</span>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                ><br/>\r\n\r\n                                <Select\r\n                                    placeholder=\"Please Select Your Country\"\r\n                                    onChange={value => handleChange({target: {name: \"country\", value}})}\r\n                                    allowClear\r\n                                    value={userDetail.country}\r\n                                >\r\n                                    {items.map(items => (\r\n                                        <Select.Option\r\n                                            key={items.value}\r\n                                            value={items.value}>\r\n                                            {items.label}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                                <span className=\"validation\">{errors.country}</span>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                            >\r\n                                <Input.Password name=\"password\" value={userDetail.password} onChange={handleChange}\r\n                                                addonBefore={(< LockOutlined/>)} placeholder=\"Enter Your Password\"/>\r\n                                <span className=\"validation\">{errors.password}</span>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button className=\"btn-md buttonsubmitlogin\" htmlType=\"submit\" onClick={submitValue}\r\n                                       type=\"primary\"\r\n                                        size={\"large\"}>\r\n                                    Create Account\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}/>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default SignUp;","D:\\routeapp\\src\\users.js",["54","55"],"import React, {useEffect, useState} from 'react';\r\nimport {Input, Table,Popconfirm,Button, Tag, Space ,Row,Col} from 'antd';\r\n\r\n\r\nconst Users = (props) => {\r\n    const [userDetail, setUserDetail] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phoneNo: \"\",\r\n        age: \"\",\r\n        gender: \"\",\r\n    });\r\n    const [data, setData] = useState([]);\r\n    const [dublicateList,setdublicateList] = useState([]);\r\n    const {Search} = Input;\r\n    useEffect(() => {\r\n        let list = [];\r\n        if (JSON.parse(localStorage.getItem(\"data\")) !== null) {\r\n            list = JSON.parse(localStorage.getItem(\"data\"));\r\n        }\r\n        setData(list);\r\n        setdublicateList(list);\r\n    }, [])\r\n    const handleChange = e => {\r\n        let {name, value} = e.target;\r\n        setUserDetail({...userDetail, [name]: value});\r\n    }\r\n    const handleDelete = (record) => {\r\n           const filterData = data.filter(index => index !== record);\r\n           localStorage.setItem('data', JSON.stringify(filterData));\r\n           setData(filterData);\r\n    }\r\n    const handleUpdate = (record) => {\r\n        props.history.push(`/editUserDetails/${record.id}`);\r\n    }\r\n    function LogOut() {\r\n        localStorage.setItem('token','');\r\n        props.history.push(\"/\");\r\n    }\r\n    const handleDashboard = () => {\r\n        props.history.push(\"/dashboard\");\r\n    }\r\n    const handleSearch = () => {\r\n        let userValues = userDetail;\r\n        let row = dublicateList || [];\r\n        if(userValues.firstName){\r\n            row = row.filter(value => value.firstName.toLowerCase().includes(userValues.firstName.toLowerCase()))\r\n        }\r\n        if(userValues.lastName){\r\n            row = row.filter(value => value.lastName.toLowerCase().includes(userValues.lastName.toLowerCase()))\r\n        }\r\n        if(userValues.email){\r\n            row = row.filter(value => value.email.toLowerCase().includes(userValues.email.toLowerCase()))\r\n        }\r\n        if(userValues.phoneNo){\r\n            row = row.filter(value => value.phoneNo.toLowerCase().includes(userValues.phoneNo.toLowerCase()))\r\n        }\r\n        if(userValues.age){\r\n            row = row.filter(value => value.age.toString().toLowerCase().includes(userValues.age.toLowerCase()))\r\n        }\r\n        if(userValues.gender){\r\n            row = row.filter(value => value.gender.toLowerCase().includes(userValues.gender.toLowerCase()))\r\n        }\r\n\r\n    //     let filterArray = [] ;\r\n    //     let userValues = userDetail;\r\n    //     const d = dublicateList.filter(record => {\r\n    //         if(userValues.firstName){\r\n    //             filterArray = record.firstName.toLowerCase().includes(userValues.firstName.toLowerCase());\r\n    //         }\r\n    //         if(userValues.lastName){\r\n    //             filterArray = record.lastName.toLowerCase().includes(userValues.lastName.toLowerCase());\r\n    //         }\r\n    //         if(userValues.email){\r\n    //             filterArray = record.email.toLowerCase().includes(userValues.email.toLowerCase());\r\n    //         }\r\n    //         if(userValues.phoneNo){\r\n    //             filterArray = record.phoneNo.toLowerCase().includes(userValues.phoneNo.toLowerCase());\r\n    //         }\r\n    //         if(userValues.age){\r\n    //             filterArray = record.age.toString().toLowerCase().includes(userValues.age.toLowerCase());\r\n    //         }\r\n    //         if(userValues.gender){\r\n    //             filterArray = record.gender.toLowerCase() === userValues.gender.toLowerCase()\r\n    //         }\r\n    //         return filterArray;\r\n    //     })\r\n    // setData(d)\r\n        setData(row);\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'First Name',\r\n            key: 'firstName',\r\n            dataIndex: 'firstName',\r\n        },\r\n        {\r\n            title: 'Last Name',\r\n            key: 'lastName',\r\n            dataIndex: 'lastName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            key: 'email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Phone No',\r\n            key: 'phoneNo',\r\n            dataIndex: 'phoneNo'\r\n        },\r\n        {\r\n            title: 'Address',\r\n            key: 'address',\r\n            dataIndex: 'address'\r\n        },\r\n        {\r\n            title: 'Age',\r\n            key: 'age',\r\n            dataIndex: 'age',\r\n        },\r\n        {\r\n            title: 'Country',\r\n            key: 'country',\r\n            dataIndex: 'country',\r\n        },\r\n        {\r\n            title: 'Gender',\r\n            key: 'gender',\r\n            dataIndex: 'gender',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            render: (text, record) => (\r\n                <div>\r\n                    <Popconfirm title=\"Are you sure to Update？\"  style={{ color: 'red' }} onConfirm={()=> {handleUpdate(record)}} >\r\n                    <Button className=\"btn btn-outline-primary btn-mini\"  >Edit</Button>\r\n                    </Popconfirm>\r\n                    &nbsp;&nbsp;\r\n                    <Popconfirm title=\"Are you sure to Delete？\"  style={{ color: 'red' }} onConfirm={()=> {handleDelete(record)}} >\r\n                    <Button className=\"btn btn-outline-danger btn-mini\"  >Delete</Button>\r\n                    </Popconfirm>\r\n                </div>\r\n            )\r\n        },\r\n    ]\r\n\r\n    return(\r\n        <>\r\n            <Button size={\"large\"} className=\"buttonlogout\" onClick={handleDashboard}><b>Dashboard</b></Button>\r\n            <Button size={\"large\"} className=\"buttonlogout\" onClick={LogOut} ><b>Log-Out</b></Button>\r\n            <Button size={\"large\"} className=\"buttonlogout\" onClick={handleSearch} ><b>Search</b></Button>\r\n            <Search className=\"search\" value={userDetail.firstName} name=\"firstName\"  onSearch={handleSearch} onChange={handleChange}  placeholder=\"input Firstname \"  />\r\n            <Search className=\"search\" value={userDetail.lastName} name=\"lastName\" onSearch={handleSearch} onChange={handleChange}  placeholder=\"input Lastname \" />\r\n            <Search className=\"search\" value={userDetail.email} name=\"email\" onSearch={handleSearch} onChange={handleChange} placeholder=\"input Email \"  />\r\n            <Search className=\"search\" value={userDetail.phoneNo} name=\"phoneNo\" onSearch={handleSearch} onChange={handleChange} placeholder=\"input PhoneNo \"  />\r\n            <Search className=\"search\" value={userDetail.age} name=\"age\" onSearch={handleSearch} onChange={handleChange} placeholder=\"input age \"/>\r\n            <Search className=\"search\" value={userDetail.gender} name=\"gender\" onSearch={handleSearch} onChange={handleChange} placeholder=\"input gender \"/>\r\n            <h3>Users Details</h3>\r\n            <Row>\r\n                <Col span={4}> </Col>\r\n                <Col span={16}>\r\n                    <Table columns={columns}\r\n                           dataSource={data}\r\n                        pagination={{pageSize:5}}/>\r\n                </Col>\r\n                <Col/>\r\n            </Row>\r\n            </>\r\n    );\r\n\r\n}\r\nexport default Users;","D:\\routeapp\\src\\privateRoute.js",["56","57"],"import React, { Component } from 'react'\r\nimport {Redirect,Route,Switch} from 'react-router-dom';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const isLoggedIn = localStorage.getItem('token')\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isLoggedIn ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to={{ pathname: '/' }} />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","D:\\routeapp\\src\\dashboard.js",[],"D:\\routeapp\\src\\ApiForm.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":13},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":69,"column":24,"nodeType":"70","endLine":69,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":53,"column":8,"nodeType":"73","endLine":53,"endColumn":10,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":60,"column":9,"nodeType":"77","messageId":"78","endLine":121,"endColumn":10},{"ruleId":"79","severity":1,"message":"80","line":147,"column":60,"nodeType":"81","messageId":"82","endLine":147,"endColumn":62},{"ruleId":"62","severity":1,"message":"83","line":2,"column":41,"nodeType":"64","messageId":"65","endLine":2,"endColumn":44},{"ruleId":"62","severity":1,"message":"84","line":2,"column":46,"nodeType":"64","messageId":"65","endLine":2,"endColumn":51},{"ruleId":"62","severity":1,"message":"85","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"86","line":2,"column":24,"nodeType":"64","messageId":"65","endLine":2,"endColumn":30},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar",["87"],["88"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["89"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Tag' is defined but never used.","'Space' is defined but never used.","'Component' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [props.match.params.id]",{"range":"92","text":"93"},[1527,1529],"[props.match.params.id]"]